#include <iostream>
#include <vector>
#include <algorithm> // Для std::swap

using namespace std;

// Функция для разделения массива 
int partition(vector<int>& arr, int low, int high) {
    int pivot = arr[high]; 
    int i = (low - 1); // Индекс меньшего элемента

    for (int j = low; j <= high - 1; ++j) {
        // Если текущий элемент меньше или равен 
        if (arr[j] <= pivot) {
            i++; // Увеличиваем индекс меньшего элемента
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return (i + 1);
}

// Функция быстрой сортировки
void quickSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        // pi  индекс разделения
        int pi = partition(arr, low, high);

        // Рекурсивно сортируем подмассивы до и после разделения
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int size;

    // Запрос размера массива
    cout << "Введите размер массива: ";
    cin >> size;

    // Создание массива
    vector<int> arr(size);

    //  Заполнение массива
    cout << "Введите элементы массива:" << endl;
    for (int i = 0; i < size; ++i) {
        cin >> arr[i];
    }

    //  Вызов быстрой сортировки
    quickSort(arr, 0, size - 1);

    //  Вывод отсортированного массива
    cout << "Отсортированный массив:" << endl;
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}
